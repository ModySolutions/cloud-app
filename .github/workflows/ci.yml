name: Build application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  web-deploy:
    name: ðŸŽ‰ Deploy to Mody Cloud
    runs-on: ubuntu-latest
    steps:
      - name: ðŸšš Get latest code
        uses: actions/checkout@v3

      - name: ACF Auth
        run: |
          cp sample-auth.json auth.json
          sed -i 's/"ENTER YOUR LICENSE KEY"/"${{ secrets.ACF_AUTH }}"/g' auth.json
          sed -i 's/"ENTER YOUR WEBSITE URL"/"${{ vars.SITE_URL }}"/g' auth.json

      - name: Cache Vendors
        id: cache-vendors
        uses: actions/cache@v3
        env:
          cache-name: cache-vendors
        with:
          path: vendors
          key: vendors
          restore-keys: |
            vendors

      - name: Plugins
        id: cache-plugins
        uses: actions/cache@v3
        env:
          cache-name: cache-plugins
        with:
          path: plugins
          key: plugins
          restore-keys: |
            plugins

      - name: Composer Install
        run: composer install --no-dev

      - name: Install backend dependencies
        uses: php-actions/composer@v6
        if: steps.cache

      - name: Use Node.js 20
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Cache Node Modules
        id: cache-node_modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node_modules
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Install Dependencies :-)
        if: steps.cache-node_modules.outputs.cache-hit != 'true'
        run: npm install

      - name: ðŸ”¨ Build Project
        run: npm run build

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: ðŸ“‚ Sync files to VPS using SSH
        run: |
          rsync -e "ssh -o StrictHostKeyChecking=no" -avz --no-times --delete --exclude='src/' --exclude='.git*' --exclude='node_modules/' --exclude='*.json' --exclude='*.yaml' --exclude='*.md' ./* ${{ vars.SSH_USER_SERVER }}:${{ env.TARGET_DIR }} --verbose
        env:
          TARGET_DIR: "/var/www/html/mody.cloud/"
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}